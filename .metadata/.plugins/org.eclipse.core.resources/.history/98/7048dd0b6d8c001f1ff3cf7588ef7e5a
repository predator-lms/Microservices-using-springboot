package com.oracle.movie_catalog_service.resources;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collector;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;
import com.oracle.movie_catalog_service.models.CatalogItem;
import com.oracle.movie_catalog_service.models.Movie;
import com.oracle.movie_catalog_service.models.UserRating;

@RestController
@RequestMapping("/catalog")
public class CatalogResource {

	public CatalogResource() {
		// TODO Auto-generated constructor stub
	}
	
	@Autowired
	private RestTemplate restTemplate;
	
	@RequestMapping("/{userId}")
	@HystrixCommand(fallbackMethod = "getFallbackCatalog")
	public List<CatalogItem> getCatalog(@PathVariable("userId") String userId){
		UserRating userRating = restTemplate.getForObject("http://RATING-DATA-SERVICE/ratingData/user/"+userId, UserRating.class);
		
		return userRating.getRatings()
				.stream()
				.map(rating -> {
					Movie movie = restTemplate.getForObject("http://MOVIE-INFO-SERVICE/movies/"+rating.getMovieId(), Movie.class);
					return new CatalogItem(movie.getName(), movie.getDescription(), rating.getRating());
				})
				.collect(Collectors.toList());	
	}
	
	public List<CatalogItem> getFallbackCatalog((@PathVariable("userId") String userId){
		return Arrays.asList(new CatalogItem("No Movie", "", 0));
	}

}
